#!ipxe
# https://gist.github.com/robinsmidsrod/2234639
# boot.salstar.sk

# boot-url and sanboot-url is set in bootstrap.ipxe

# Setup some basic convenience variables
set menu-timeout 5000
set submenu-timeout ${menu-timeout}
set base-iqn iqn.2011-02.lan.smidsrod
set base-iscsi iscsi:${iscsi-server}::::${base-iqn}
set root-shadow $1$RKvIqeyr$J0XXXXX6F3WAeQCWk.

set default-source http://192.168.2.13:8080
set boot_local ${default-source}
set url ${default-source}

# Set initiator-iqn to either hostname or mac
isset ${hostname} && set initiator-iqn ${base-iqn}:${hostname} || set initiator-iqn ${base-iqn}:${mac}

# Ensure we have menu-default set to something
isset ${menu-default} || set menu-default exit

# Figure out some typical client information
cpuid --ext 29 && set arch x64 || set arch x86
cpuid --ext 29 && set archl amd64 || set archl i686

###################### MAIN MENU ####################################

:main_menu
menu iPXE boot menu for ${initiator-iqn}
item --key x exit         Exit iPXE and continue BIOS boot
item
item salstar boot.salstar.sk
item --key p pxelinux     Load PXELinux menu
item --key r menu-recovery Recovery tools...
item --key d menu-diag    Diagnostics tools...
item --key a archlinux Archlinux
item menu-openbsd OpenBSD
item esxi esxi
item coreos CoreOS
item securityonion Security-Onion
item --key k menu-kali            Kali
item --key b debian Debian ${arch_a} [b]
item --key u ubuntu Ubuntu ${arch_a} [u]
item clonezilla   Clonezilla
item menu-centos   Centos
item menu-windows7   Windows7
item --gap --             ------------------------- Advanced options -------------------------------
item --key c config       Configure settings
item shell                Drop to iPXE shell
item reboot               Reboot computer
isset ${menu} && set timeout 0 || set timeout 60000
choose --timeout ${timeout} --default ${menu} menu || goto local
echo ${cls}
goto ${menu} ||
#imgverify ${menu}.ipxe ${sigs}${menu}.ipxe.sig || goto error
chain ${menu}.ipxe || goto error
goto main_menu


:cancel
echo You cancelled the menu, dropping you to a shell

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
goto main_menu

:error
echo Booting failed, dropping to shell
goto shell

:reboot
reboot

:exit
exit

:config
config
goto main_menu

:back
set submenu-timeout 0
clear submenu-default
goto main_menu


:salstar
chain http://boot.salstar.sk


:debian
:ubuntu
#imgverify deb.ipxe ${sigs}deb.ipxe.sig
chain deb.ipxe
goto main_menu

############ MAIN MENU ITEMS ############

:freedos
echo Booting FreeDOS from iSCSI for ${initiator-iqn}
set root-path ${base-iscsi}:${hostname}.boot.freedos
sanboot ${root-path} || goto failed
goto start

:msdos
echo Booting MS-DOS from iSCSI for ${initiator-iqn}
set root-path ${base-iscsi}:${hostname}.boot.msdos
sanboot ${root-path} || goto failed
goto start

:vmware
echo Booting VMware ESXi from iSCSI for ${initiator-iqn}
set root-path ${base-iscsi}:${hostname}.boot.vmware
sanboot ${root-path} || goto failed
goto start

:windows7
echo Booting Windows 7 from iSCSI for ${initiator-iqn}
# Force gateway to be the iSCSI target server (kludge for stupid window behavior)
set netX/gateway ${iscsi-server}
set root-path ${base-iscsi}:${hostname}.boot.windows7
sanboot ${root-path} || goto failed
goto start

:pxelinux
set 210:string tftp://${next-server}/
chain ${210:string}pxelinux.0 || goto failed
goto start

###################### RECOVERY MENU ################################

:menu-recovery
menu Recovery tools
item sysrcd          SystemRescueCD 2.6.0
item spinrite        SpinRite 6.0
item spinrite-msdos  SpinRite 6.0 (using MS-DOS 6.22)
item macrium-winpe Macrium Reflect 5.2 Rescue CD (WinPE 4.0 ${arch})
item macrium-winpe-sanboot   Macrium Reflect 5.2 Rescue CD (WinPE 4.0 ${arch} with sanboot)
item macrium-linux   Macrium Reflect 5.2 Rescue CD (Linux ${arch})
item macrium-linux-sanboot   Macrium Reflect 5.2 Rescue CD (Linux ${arch} with sanboot)
item firefly         Firefly IllumOS recovery environment 0613
item freedos-direct  FreeDOS 1.1 (directly using iPXE)
item
item --key 0x08 back Back to top menu...
iseq ${menu-default} menu-recovery && isset ${submenu-default} && goto menu-recovery-timed ||
choose selected && goto ${selected} || goto start
:menu-recovery-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start

:spinrite
sanboot --no-describe --drive 0x00 ${sanboot-url}/spinrite-6.0/spinrite-6.0.img || goto failed
#sanboot --no-describe --drive 0x081 ${sanboot-url}/spinrite-6.0/spinrite-6.0.iso
#initrd ${boot-url}/spinrite/spinrite-6.0.img
#chain ${boot-url}/memdisk
goto start

:spinrite-msdos
sanboot --no-describe --drive 0x00 ${sanboot-url}/spinrite-6.0/spinrite-6.0-msdos.img || goto failed
goto start

:sysrcd
echo Booting SystemRescueCD 2.6.0 x86 for ${initiator-iqn}
# Fixup needed after copying files from downloaded ISO to directory:
#  cd path/to/sysrcd-iso-unpacked-files/isolinux && \
#   perl -p -i -e 's{/bootdisk}{../bootdisk}' isolinux.cfg && \
#   perl -p -i -e 's{scandelay=1}{scandelay=1 dodhcp nfsboot=nas.smidsrod.lan:/raid/boot/sysrcd-2.6.0-x86}' isolinux.cfg && \
#   perl -p -i -e 's{rescuecd_us}{rescuecd_no}; s{US}{NO}; s{setkmap=us}{setkmap=no}; s{american}{norwegian};' isolinux.cfg && \
#   cd -
# PXELinux options, see http://syslinux.zytor.com/wiki/index.php/PXELINUX for details
set 210:string ${boot-url}/sysrcd-2.6.0-x86/isolinux/
set 209:string isolinux.cfg
set filename ${210:string}pxelinux.0
chain ${filename} || goto failed
goto start

:macrium-winpe
echo Booting Macrium Reflect 5.2 (WinPE 4.0 ${arch}) for ${initiator-iqn}
set base-url ${boot-url}/macrium-5.2/macrium-5.2-rescue-winpe-4.0-${arch}
kernel ${boot-url}/wimboot
initrd ${base-url}/bootmgr          bootmgr
initrd ${base-url}/Boot/BCD         BCD
initrd ${base-url}/Boot/boot.sdi    boot.sdi
initrd ${base-url}/sources/boot.wim boot.wim
boot || goto failed
goto start

:macrium-linux
echo Booting Macrium Reflect 5.2 (Linux ${arch}) for ${initiator-iqn}
set base-url ${boot-url}/macrium-5.2/macrium-5.2-rescue-linux
kernel ${base-url}/vmlinuz
initrd ${base-url}/initramfs.xz
imgargs vmlinuz vga=0x317
boot || goto failed
goto start

:macrium-winpe-sanboot
sanboot --no-describe ${sanboot-url}/macrium-5.2/macrium-5.2-rescue-winpe-4.0-${arch}.iso || goto failed
goto start

:macrium-linux-sanboot
sanboot --no-describe ${sanboot-url}/macrium-5.2/macrium-5.2-rescue-linux.iso || goto failed
goto start

:firefly
echo Booting Firefly 0613 for ${initiator-iqn}
set base-url ${boot-url}/firefly-0613/boot
# http://alexeremin.blogspot.no/2013/05/firefly-failsafe-image-for-illumos.html
# http://sourceforge.net/projects/fireflyfailsafe/files/
# Download ISO, unpack ISO and copy files to boot-url
# The ramdisk is compressed with gzip, which must be unpacked
# to work with iPXE
# mv firefly firefly.gz
# gunzip firefly.gz
kernel ${base-url}/platform/i86pc/kernel/amd64/unix
module ${base-url}/firefly
boot || goto failed
goto start

:freedos-direct
echo Booting FreeDOS 1.1 KERNEL.SYS for ${initiator-iqn}
set base-url ${boot-url}/freedos-1.1/fd11src/FREEDOS/SETUP/ODIN
# TODO: Work-in-progress
kernel ${base-url}/KERNEL.SYS
boot || goto failed
goto start

###################### DIAGNOSTICS MENU #############################

:menu-diag
menu Diagnostic tools
item hdt           HDT 0.5.0
item memtest       Memtest86+ 4.20
item memtest-ipxe  Memtest86+ 4.20 (iPXE)
item breakin       Breakin 3.71
item dban          Darik's Boot and Nuke 2.2.7
item etdump        Bart's etdump 1.2
item wdcdiag       Western Digital Diagnostics 5.04f
item
item --key 0x08 back Back to top menu...
iseq ${menu-default} menu-diag && isset ${submenu-default} && goto menu-diag-timed ||
choose selected && goto ${selected} || goto start
:menu-diag-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start

:hdt
sanboot --no-describe ${sanboot-url}/hdt-0.5.0.iso || goto failed
goto start

:memtest
# TODO: Fix the URI parser to make the + sign work
#chain ${boot-url}/memtest86+-4.20.elf.img - || goto failed
chain ${boot-url}/memtest86plus-4.20.elf.img - || goto failed
goto start

:memtest-ipxe
chain ${boot-url}/memtest.0 passes=1 && set memtest GOOD || set memtest BAD
set memtest_errno ${errno}
iseq ${memtest} GOOD && goto memtest-info ||
iseq ${memtest_errno} 0x1 && set memtest BAD || set memtest UNKNOWN
:memtest-info
menu Your memory seems to be ${memtest}
item memtest-report   Report memtest result to web service
item --key 0x08 menu-diag Back to diagnostics menu...
choose --default menu-diag selected && goto ${selected} || goto start

:memtest-report
chain ${boot-url}/memtest-report.cgi?result=${memtest}&mac=${mac}&uuid=${uuid}&hostname=${hostname} ||
goto menu-diag

:breakin
# Stress-testing and diagnostics utility
# http://www.advancedclustering.com/software/breakin.html
# Set sshpasswd=yourpassword for remote access
# Set startup= to 'cloner' or 'rescue' for more features
# When startup=cloner, server= and image= can also be set
# http://www.advancedclustering.com/software/cloner.html
kernel ${boot-url}/breakin-3.71/kernel-3.71
initrd ${boot-url}/breakin-3.71/initrd-3.71.cpio.lzma
imgargs kernel-3.71 startup=breakin
boot || goto failed
goto start

:dban
kernel ${boot-url}/dban-2.2.7/DBAN.BZI
imgargs DBAN.BZI nuke="dwipe --method gutmann --rounds 2 --verify last" silent vga=785
boot || goto failed
goto start

:etdump
# Booting it with memdisk makes it read/write, while sanboot forces read/only
#sanboot --drive 0x00 ${sanboot-url}/freedos-etdump-floppy.img
initrd ${boot-url}/freedos-etdump-floppy.img
chain ${boot-url}/memdisk || goto failed
goto start

:wdcdiag
# Extracted the bootable floppy image from diag-5.04f.iso
sanboot --drive 0x00 ${sanboot-url}/western-digital/diag-5.04f.img || goto failed
goto start


## KALI
:menu-kali
menu Kali
item kali-mercury    mercury
item
item --key 0x08 back Back to top menu...
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:kali-mercury
set append quiet url=http://${next-server}:8080/kali-mercury.cfg locale=en_US keymap=us hostname=kali domain=local.lan
kernel http://repo.kali.org/kali/dists/kali/main/installer-amd64/current/images/netboot/debian-installer/amd64/linux  ${append}
initrd http://repo.kali.org/kali/dists/kali/main/installer-amd64/current/images/netboot/debian-installer/amd64/initrd.gz
boot


## OPENBSD
:menu-openbsd
menu OpenBSD
item openbsd-noks no kickstart
item obenbsd-bajs bajs
item
item --key 0x08 back Back to top menu...
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:openbsd-noks
imgfree
initrd http://ftp.eu.openbsd.org/pub/OpenBSD/5.3/amd64/cd53.iso
chain http://boot.salstar.sk/memdisk iso raw || goto failed
goto start

:openbsd-bajs
imgfree
initrd http://192.168.2.13:8080/osx/n.nbi/i386/booter
chain http://192.168.2.13:8080/osx/n.nbi/i386/NetInstall.dmg iso raw || goto failed
goto start

## CENTOS
:menu-centos
set source ftp://ftp.sunet.se/pub/Linux/distributions/centos/6.4/os/x86_64
menu Centos
item centos-noks no kicktstart
item centos-rdo rdo
item
item --key 0x08 back Back to top menu...
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:centos-noks
set hostname centos-noks
set append ramdisk_size=100000 ksdevice=eth0 ip=dhcp url=${source}
kernel ${source}/isolinux/vmlinuz ${append}
initrd ${source}/isolinux/initrd.img
boot || goto failed
goto start


:centos-rdo
set hostname centos-rdo
set append ramdisk_size=100000 ksdevice=eth0 ip=dhcp ks=${default-source}/${hostname}
kernel ${source}/isolinux/vmlinuz ${append}
initrd ${source}/isolinux/initrd.img
boot || goto failed
goto start

## Windows7
:menu-windows7
menu Windows7
item windows7-noks no kicktstart
item
item --key 0x08 back Back to top menu...
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:windows7-noks
set hostname windows7-noks
set source ${default-source}/windows/windows7
kernel ${default-source}/bins/wimboot
initrd ${source}/bootmgr          bootmgr
initrd ${source}/boot/bcd         BCD
initrd ${source}/boot/boot.sdi    boot.sdi
initrd ${source}/sources/boot.wim boot.wim
imgstat
boot || goto failed
goto main_menu



:ubuntu-install-local
echo Starting Ubuntu 12.04 ${archl} local installer for ${initiator-iqn}
set base-url ${boot-url}/ubuntu-12.04-server-${archl}
kernel ${base-url}/install/netboot/ubuntu-installer/${archl}/linux
initrd ${base-url}/install/netboot/ubuntu-installer/${archl}/initrd.gz
imgargs linux auto=true fb=false url=${base-url}/./preseed.cfg
boot || goto failed
goto start


:vmware-x64-install
echo Booting VMware 64-bit installer for ${initiator-iqn}
set root-path ${base-iscsi}:${hostname}.boot.vmware
sanhook ${root-path} || goto failed
initrd ${boot-url}/vmware/vmware-esxi-5.0-x64.iso
chain ${boot-url}/memdisk iso || goto failed
goto start

:vmware-x86-install
echo Booting VMware 32-bit installer for ${initiator-iqn}
set root-path ${base-iscsi}:${hostname}.boot.vmware
sanhook ${root-path} || goto failed
initrd ${boot-url}/vmware/vmware-esxi-3.5-x86.iso
chain ${boot-url}/memdisk iso || goto failed
goto start

:winpe
echo Booting Windows PE ${arch} installer for ${initiator-iqn}
echo (for installing Windows 7)
# Force gateway to be the iSCSI target server (kludge for stupid window behavior)
set netX/gateway ${iscsi-server}

set root-path ${base-iscsi}:${hostname}.boot.windows7
sanhook ${root-path} || goto failed


:xenclient-install
echo Booting XenClient 2.1 installer for ${initiator-iqn}
# XenClient doesn't seem to support installing to iSCSI volumes
# It only supports installing using iBFT
#set root-path ${base-iscsi}:${hostname}.boot.xenclient
#sanhook ${root-path} || goto failed
# The xenclient-2.1 folder is just the unpacked contents of the installer ISO
# Make sure you modify the isolinux.cfg and point it at your answer file URL
# You can find an example of the answer file in the "Setup and Usage Guide"
set 210:string ${boot-url}/xenclient-2.1/isolinux/
set 209:string isolinux.cfg
set filename ${210:string}pxelinux.0
chain ${filename} || goto failed
goto start

:windows7-hookonly
echo Hooking Windows 7 iSCSI volume for ${initiator-iqn}
# Force gateway to be the iSCSI target server (kludge for stupid window behavior)
set netX/gateway ${iscsi-server}
# Hook iSCSI drive
set root-path ${base-iscsi}:${hostname}.boot.windows7
sanhook --drive 0x81 ${root-path} || goto failed
echo Start Windows 7 installer DVD from local drive
sanboot --no-describe --drive 0x80 ${sanboot-url}/windows-7/ultimate-${arch}-en.iso || goto failed
goto start

###################### LIVE ENVIRONMENT MENU ########################

:menu-live
menu Live environments for ${initiator-iqn}
item openelec-generic-live     Boot OpenELEC Generic 3.x
item ubuntu-live-1204          Boot Ubuntu LiveCD 12.04 ${archl}
item slitaz-live               Boot SliTaz 4.0 LiveCD
item smartos                   Boot SmartOS
item smartos-pre-ept           Boot SmartOS (pre-ept)
item kms-test                  Boot KMS test kernel
item tinycore-live-core        Boot TinyCoreLinux 4.7.6 Core
item tinycore-live-tinycore    Boot TinyCoreLinux 4.7.6 TinyCore
item tinycore-live-coreplus    Boot TinyCoreLinux 4.7.6 CorePlus
item
item --key 0x08 back      Back to top menu...
iseq ${menu-default} menu-live && isset ${submenu-default} && goto menu-live-timed ||
choose selected && goto ${selected} || goto start
:menu-live-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start

:openelec-generic-live
set openelec-version 3.0.6
echo Booting OpenELEC Generic ${openelec-version} for ${initiator-iqn}
set base-url ${boot-url}/openelec-generic-i386-${openelec-version}
kernel ${base-url}/target/KERNEL
initrd ${base-url}/target/SYSTEM
# Config from: http://wiki.openelec.tv/index.php?title=Network_Boot_-_NFS
# and http://wiki.openelec.tv/index.php?title=Installation#Network_Boot_.28PXE.29
# NFS/NBD/iSCSI boot support only works on version >= 2 of OpenELEC
# The NFS server must be specified as an IP, name resolution doesn't work :(
imgargs KERNEL ip=dhcp boot=NFS=${nfs-server}:/raid/boot/openelec-generic-i386-${openelec-version}/target disk=NFS=${nfs-server}:/raid/misc/openelec-storage/ overlay
boot || goto failed
goto start

:ubuntu-live-1204
# See http://manpages.ubuntu.com/manpages/precise/man7/casper.7.html for casper cmdline details
echo Booting Ubuntu Live 12.04 ${archl} for ${initiator-iqn}
set base-url ${boot-url}/ubuntu-12.04-dvd-${archl}
kernel ${base-url}/casper/vmlinuz
initrd ${base-url}/casper/initrd.lz
imgargs vmlinuz root=/dev/nfs boot=casper netboot=nfs nfsroot=${nfs-server}:/raid/boot/ubuntu-12.04-dvd-${archl} locale=en_US.UTF-8 keyboard-configuration/layoutcode=no mirror/country=NO
boot || goto failed
goto start

:slitaz-live
echo Booting SliTaz 4.0 LiveCD for ${initiator-iqn}
set base-url ${boot-url}/slitaz-4.0/
kernel ${base-url}/boot/bzImage
initrd ${base-url}/boot/rootfs4.gz
initrd ${base-url}/boot/rootfs3.gz
initrd ${base-url}/boot/rootfs2.gz
initrd ${base-url}/boot/rootfs1.gz
imgargs bzImage rw root=/dev/null vga=normal autologin lang=en_US kmap=no-latin1
boot || goto failed
goto start

:smartos
echo Booting SmartOS for ${initiator-iqn}
# Hook iSCSI root volume (optional, not yet working)
sanhook ${base-iscsi}:${hostname}.boot.smartos ||
set base-url ${boot-url}/smartos
# See http://nahamu.github.com/2011/08/17/smartos-pxe.html for details
# See http://wiki.smartos.org/display/DOC/Getting+Started+with+SmartOS
# http://wiki.smartos.org/display/DOC/PXE+Booting+SmartOS
# http://wiki.smartos.org/display/DOC/SmartOS+Command+Line+Tips#SmartOSCommandLineTips-FiguringoutwheretoconfigureadditionalNetworkinterfacesorVLANs
# http://wiki.smartos.org/display/DOC/extra+configuration+options
# http://wiki.smartos.org/display/DOC/Managing+NICs
kernel ${base-url}/platform/i86pc/kernel/amd64/unix
initrd ${base-url}/platform/i86pc/amd64/boot_archive
# This doesn't work, but I would very much like it to
#initrd ${base-url}/config/${hostname}.txt /usbkey/config
# smartos=true to run smartos "installer" (and disable noimport=true)
# You can also run it manually, it's at /smartdc/bin/smartos_prompt_config.sh
# keyboard-layout=norway doesn't work anymore (it used to)
#imgargs unix -v -B console=text,standalone=true,noimport=true,keyboard-layout=norway,hostname=${hostname},root_shadow='${root-shadow}'
imgargs unix -B console=text,standalone=true,hostname=${hostname},admin_nic=${mac},admin_ip=dhcp,admin_gateway=dhcp,external_nic=${mac},external_ip=dhcp,external_gateway=dhcp,dns_resolvers=10.1.1.1,dns_domain=smidsrod.lan,ntp_hosts=pool.ntp.org,root_shadow='${root-shadow}'
boot || goto failed
goto start

:smartos-pre-ept
echo Starting SmartOS (pre-ept branch) for ${initiator-iqn}
# pre-ept image downloaded from http://alpha.sysmgr.org/smartos-20120223-jmc2.iso
# Posted by LeftWing on #illumos / FreeNode at 2012-04-11 09:09 UTC+2
set base-url ${boot-url}/smartos/pre-ept
kernel ${base-url}/platform/i86pc/kernel/amd64/unix
module ${base-url}/platform/i86pc/amd64/boot_archive
imgargs unix -v -B console=text,standalone=true,noimport=true,root_shadow='${root-shadow}'
boot || goto failed
goto start

:kms-test
echo Booting KMS-enabled Linux kernel for ${initiator-iqn}
set base-url ${boot-url}/kms_test
kernel ${base-url}/vmlinuz
initrd ${base-url}/initrd ||
imgargs vmlinuz rw root=/dev/nfs nfsroot=${nfs-server}:/raid/kms_test ip=dhcp ||
boot || goto failed
goto start

# TinyCore is work-in-progress
# Current problems is that tce=/mnt/nfs/cde works, but dir is not writable by tc user,
# keymap is not loaded, and it seems like there is something I'm not understanding properly
# about the TC boot process
# More to read on http://distro.ibiblio.org/tinycorelinux/concepts.html
# and http://wiki.tinycorelinux.net/wiki:netbooting
:tinycore-live-core
set tc-version 4.7.6
echo Booting TinyCoreLinux Live Core ${tc-version} for ${inititator-iqn}
set base-url ${boot-url}/tinycore/Core-${tc-version}/
kernel ${base-url}/boot/vmlinuz
initrd ${base-url}/boot/core.gz
imgargs vmlinuz loglevel=3
boot || goto failed
goto start

:tinycore-live-tinycore
set tc-version 4.7.6
echo Booting TinyCoreLinux Live TinyCore ${tc-version} for ${inititator-iqn}
set base-url ${boot-url}/tinycore/TinyCore-${tc-version}
kernel ${base-url}/boot/vmlinuz
initrd ${base-url}/boot/core.gz
imgargs vmlinuz nfsmount=${nfs-server}:/raid/boot/tinycore/TinyCore-${tc-version} host=${hostname} lang=us kmap=nb loglevel=3 syslog  tce=/mnt/nfs/cde
boot || goto failed
goto start

:tinycore-live-coreplus
set tc-version 4.7.6
echo Booting TinyCoreLinux Live CorePlus ${tc-version} for ${inititator-iqn}
set base-url ${boot-url}/tinycore/CorePlus-${tc-version}
kernel ${base-url}/boot/vmlinuz
initrd ${base-url}/boot/core.gz
imgargs vmlinuz nfsmount=${nfs-server}:/raid/boot/tinycore/CorePlus-${tc-version} host=${hostname} lang=us kmap=nb loglevel=3 syslog  tce=/mnt/nfs/cde showapps desktop=flwm_topside
boot || goto failed
goto start
